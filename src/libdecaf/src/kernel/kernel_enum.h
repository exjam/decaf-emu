#ifndef KERNEL_ENUM_H
#define KERNEL_ENUM_H

#include <common/enum_start.h>

ENUM_NAMESPACE_BEG(kernel)

ENUM_BEG(MapPermission, uint32_t)
   ENUM_VALUE(ReadOnly,                1)
   ENUM_VALUE(ReadWrite,               2)
ENUM_END(MapPermission)

ENUM_BEG(SyscallID, uint32_t)
   ENUM_VALUE(AllocVirtAddr,           0x3800)
   ENUM_VALUE(FreeVirtAddr,            0x3900)
   ENUM_VALUE(GetMapVirtAddrRange,     0x3A00)
   ENUM_VALUE(GetDataPhysAddrRange,    0x3B00)
   ENUM_VALUE(GetAvailPhysAddrRange,   0x3C00)
   ENUM_VALUE(MapMemory,               0x3D00)
   ENUM_VALUE(UnmapMemory,             0x3E00)
   ENUM_VALUE(QueryVirtAddr,           0x7500)
ENUM_END(SyscallID)

ENUM_BEG(PhysicalRegion, int32_t)
   ENUM_VALUE(Invalid,                 -1)
   ENUM_VALUE(MEM1,                    0)
   ENUM_VALUE(LockedCache,             1)
   ENUM_VALUE(MEM0,                    2)
   ENUM_VALUE(MEM0IosKernel,           3)
   ENUM_VALUE(MEM0IosMcp,              4)
   ENUM_VALUE(MEM0IosCrypto,           5)
   ENUM_VALUE(MEM2,                    6)
   ENUM_VALUE(MEM2IosUsb,              7)
   ENUM_VALUE(MEM2IosFs,               8)
   ENUM_VALUE(MEM2IosPad,              9)
   ENUM_VALUE(MEM2IosNet,              10)
   ENUM_VALUE(MEM2IosAcp,              11)
   ENUM_VALUE(MEM2IosNsec,             12)
   ENUM_VALUE(MEM2IosNim,              13)
   ENUM_VALUE(MEM2IosFpd,              14)
   ENUM_VALUE(MEM2IosTest,             15)
   ENUM_VALUE(MEM2IosAuxil,            16)
   ENUM_VALUE(MEM2IosBsp,              17)
   ENUM_VALUE(MEM2ForegroundBucket,    18)
   ENUM_VALUE(MEM2SharedData,          19)
   ENUM_VALUE(MEM2LoaderHeap,          20)
   ENUM_VALUE(MEM2IosSharedHeap,       21)
   ENUM_VALUE(MEM2TilingApertures,     22)
   ENUM_VALUE(MEM2SystemHeap,          23)
   ENUM_VALUE(MEM2OverlayArena,        24)
   ENUM_VALUE(MEM2AppHeap,             25)
   ENUM_VALUE(SRAM1,                   26)
   ENUM_VALUE(SRAM1C2W,                27)
   ENUM_VALUE(SRAM0,                   28)
   ENUM_VALUE(SRAM0IosKernel,          29)
ENUM_END(PhysicalRegion)

ENUM_BEG(VirtualRegion, int32_t)
   ENUM_VALUE(Invalid,                 -1)
   ENUM_VALUE(SystemHeap,              0)
   ENUM_VALUE(AppHeapCode,             1)
   ENUM_VALUE(AppHeapData,             2)
   ENUM_VALUE(OverlayArena,            3)
   ENUM_VALUE(TilingApertures,         4)
   ENUM_VALUE(VirtualMapRange,         5)
   ENUM_VALUE(ForegroundBucket,        6)
   ENUM_VALUE(MEM1,                    7)
   ENUM_VALUE(SharedData,              8)
   ENUM_VALUE(LockedCache,             9)
ENUM_END(VirtualRegion)

ENUM_BEG(VirtualMemoryType, uint32_t)
   ENUM_VALUE(Invalid,                 0)
   ENUM_VALUE(MappedReadOnly,          1)
   ENUM_VALUE(MappedReadWrite,         2)
   ENUM_VALUE(Free,                    3)
   ENUM_VALUE(Allocated,               4)
ENUM_END(VirtualMemoryType)

ENUM_NAMESPACE_END(kernel)

#include <common/enum_end.h>

#endif // ifdef KERNEL_ENUM_H
